parser p_hadoop {
  db-parser(file("/etc/syslog-ng/patterndb.d/hadoop/hadoop.pdb"));
};

parser p_hadoop_hive {
  db-parser(file("/etc/syslog-ng/patterndb.d/hadoop/hive.pdb"));
};

parser p_hadoop_oozie {
  db-parser(file("/etc/syslog-ng/patterndb.d/hadoop/oozie.pdb"));
};

parser p_hadoop_impala {
  db-parser(file("/etc/syslog-ng/patterndb.d/hadoop/impala.pdb"));
};

filter f_hadoop_warn_error {
  match("ERROR" value("hadoop.severity")) or
  match("WARN" value("hadoop.severity"));
};

filter f_hadoop_error {
  match("ERROR" value("hadoop.severity"));
};

filter f_hadoop_generated {
  match("true" value("hadoop.generated"));
};

rewrite r_hadoop_set_program_namenode {
  subst("hadoop", "namenode", value("PROGRAM"));
};

rewrite r_hadoop_set_program_datanode {
  subst("hadoop", "datanode", value("PROGRAM"));
};

rewrite r_hadoop_set_program_journalnode {
  subst("hadoop", "journalnode", value("PROGRAM"));
};

rewrite r_hadoop_set_program_zkfc {
  subst("hadoop", "zkfc", value("PROGRAM"));
};

rewrite r_hadoop_set_program_nodemanager {
  subst("hadoop", "nodemanager", value("PROGRAM"));
};

rewrite r_hadoop_set_program_resourcemanager {
  subst("hadoop", "resourcemanager", value("PROGRAM"));
};

rewrite r_hadoop_set_program_historyserver {
  subst("hadoop", "historyserver", value("PROGRAM"));
};

rewrite r_hadoop_set_program_hive_server {
  subst("hive", "hive-server", value("PROGRAM"));
};

rewrite r_hadoop_set_program_hive_metastore {
  subst("hive", "hive-metastore", value("PROGRAM"));
};

rewrite r_hadoop_set_program_statestore {
  subst("impala", "statestore", value("PROGRAM"));
};

rewrite r_hadoop_set_program_catalog {
  subst("impala", "catalog", value("PROGRAM"));
};

{% for node in groups['namenodes'] %}
source s_hadoop_namenode_{{ node | replace('-', '_') }} {
  file("{{ log_folder }}/hdfs/hadoop-hdfs-namenode-{{node}}.log"
       program-override("hadoop")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_namenode_{{ node | replace('-', '_') }});
  parser(p_hadoop);
  filter(f_hadoop_generated);
  filter(f_hadoop_error);
  rewrite(r_hadoop_set_program_namenode);
  destination({{ syslog_ng_destination }});
};

source s_hadoop_zkfc_{{ node | replace('-', '_') }} {
  file("{{ log_folder }}/hdfs/hadoop-hdfs-zkfc-{{ node }}.log"
       program-override("hadoop")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_zkfc_{{ node | replace('-', '_') }});
  parser(p_hadoop);
  filter(f_hadoop_generated);
  filter(f_hadoop_error);
  rewrite(r_hadoop_set_program_zkfc);
  destination({{ syslog_ng_destination }});
};
{% endfor %}

{% for node in groups['datanodes'] %}
source s_hadoop_datanode_{{ node | replace('-', '_') }} {
  file("{{ log_folder }}/hdfs/hadoop-hdfs-datanode-{{ node }}.log"
       program-override("hadoop")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_datanode_{{ node | replace('-', '_') }});
  parser(p_hadoop);
  filter(f_hadoop_generated);
  filter(f_hadoop_error);
  rewrite(r_hadoop_set_program_datanode);
  destination({{ syslog_ng_destination }});
};

source s_hadoop_nodemanager_{{ node | replace('-', '_') }} {
  file("{{ log_folder }}/yarn/yarn-yarn-nodemanager-{{ node }}.log"
       program-override("hadoop")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_nodemanager_{{ node | replace('-', '_') }});
  parser(p_hadoop);
  filter(f_hadoop_generated);
  filter(f_hadoop_error);
  rewrite(r_hadoop_set_program_nodemanager);
  destination({{ syslog_ng_destination }});
};
{% endfor %}

{% for node in groups['journalnodes'] %}
source s_hadoop_journalnode_{{ node | replace('-', '_') }} {
  file("{{ log_folder }}/hdfs/hadoop-hdfs-journalnode-{{ node }}.log"
       program-override("hadoop")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_journalnode_{{ node | replace('-', '_')}});
  parser(p_hadoop);
  filter(f_hadoop_generated);
  filter(f_hadoop_error);
  rewrite(r_hadoop_set_program_journalnode);
  destination({{ syslog_ng_destination }});
};
{% endfor %}

{% for node in groups['yarnresourcemanager'] %}
source s_hadoop_resourcemanager_{{ node | replace('-', '_') }} {
  file("{{ log_folder }}/yarn/yarn-yarn-resourcemanager-{{ node }}.log"
       program-override("hadoop")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_resourcemanager_{{ node | replace('-', '_') }});
  parser(p_hadoop);
  filter(f_hadoop_generated);
  filter(f_hadoop_error);
  rewrite(r_hadoop_set_program_resourcemanager);
  destination({{ syslog_ng_destination }});
};
{% endfor %}

source s_hadoop_historyserver {
  file("{{ log_folder }}/mapred/mapred-mapred-historyserver-{{ groups['yarnresourcemanager'][0] }}.out"
       program-override("hadoop")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_historyserver);
  parser(p_hadoop);
  filter(f_hadoop_generated);
  filter(f_hadoop_error);
  rewrite(r_hadoop_set_program_historyserver);
  destination({{ syslog_ng_destination }});
};

source s_hadoop_hive_server {
  file("{{ log_folder }}/hive/hive-server2.log"
       program-override("hive")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_hive_server);
  parser(p_hadoop_hive);
  filter(f_hadoop_generated);
  filter(f_hadoop_error);
  rewrite(r_hadoop_set_program_hive_server);
  destination({{ syslog_ng_destination }});
};

source s_hadoop_hive_metastore {
  file("{{ log_folder }}/hive/hive-metastore.log"
       program-override("hive")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_hive_metastore);
  parser(p_hadoop_hive);
  filter(f_hadoop_generated);
  filter(f_hadoop_error);
  rewrite(r_hadoop_set_program_hive_metastore);
  destination({{ syslog_ng_destination }});
};

source s_hadoop_oozie {
  file("{{ log_folder }}/oozie/oozie.log"
       program-override("oozie")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_oozie);
  parser(p_hadoop_oozie);
  filter(f_hadoop_generated);
  filter(f_hadoop_error);
  destination({{ syslog_ng_destination }});
};

source s_hadoop_impala_error {
  file("{{ log_folder }}/impala/impalad.ERROR"
       program-override("impala")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(error)); };

source s_hadoop_impala_warn {
  file("{{ log_folder }}/impala/impalad.WARNING"
       program-override("impala")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_impala_error);
  parser(p_hadoop_impala);
  filter(f_hadoop_generated);
  destination({{ syslog_ng_destination }});
};

log {
  source(s_hadoop_impala_warn);
  parser(p_hadoop_impala);
  filter(f_hadoop_generated);
  destination({{ syslog_ng_destination }});
};

source s_hadoop_statestore_error {
  file("{{ log_folder }}/impala/statestored.ERROR"
       program-override("impala")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(error)); };

source s_hadoop_statestore_warn {
  file("{{ log_folder }}/impala/statestored.WARNING"
       program-override("impala")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_statestore_error);
  parser(p_hadoop_impala);
  filter(f_hadoop_generated);
  rewrite(r_hadoop_set_program_statestore);
  destination({{ syslog_ng_destination }});
};

log {
  source(s_hadoop_statestore_warn);
  parser(p_hadoop_impala);
  filter(f_hadoop_generated);
  rewrite(r_hadoop_set_program_statestore);
  destination({{ syslog_ng_destination }});
};

source s_hadoop_catalog_error {
  file("{{ log_folder }}/impala/catalogd.ERROR"
       program-override("impala")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(error)); };

source s_hadoop_catalog_warn {
  file("{{ log_folder }}/impala/catalogd.WARNING"
       program-override("impala")
       multi-line-mode(indented)
       default-facility(daemon)
       follow_freq(1)
       flags(no-parse)
       default-priority(warning)); };

log {
  source(s_hadoop_catalog_error);
  parser(p_hadoop_impala);
  filter(f_hadoop_generated);
  rewrite(r_hadoop_set_program_catalog);
  destination({{ syslog_ng_destination }});
};

log {
  source(s_hadoop_catalog_warn);
  parser(p_hadoop_impala);
  filter(f_hadoop_generated);
  rewrite(r_hadoop_set_program_catalog);
  destination({{ syslog_ng_destination }});
};
